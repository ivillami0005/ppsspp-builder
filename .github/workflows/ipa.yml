name: Build iOS PPSSPP IPA

on:
  push:
    branches:
      - master
    tags:
      - "v*.*"
    paths-ignore:
      - '*.{txt,md}'
      - 'Tools/**'
      - '.{editorconfig,gitattributes,gitignore}'
      - 'appveyor.yml'
  pull_request:
    branches:
      - master
    paths-ignore:
      - '*.{txt,md}'
      - 'Tools/**'
      - '.{editorconfig,gitattributes,gitignore}'
      - 'appveyor.yml'

env:
  BUILD_DIR: ppsspp/build-ios
  IPHONEOS_DEPLOYMENT_TARGET: "12.0"
  P12_PASSWORD: "password"

jobs:
  ios-build:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # checkout including submodules  [oai_citation_attribution:2‡github.com](https://github.com/KhronosGroup/MoltenVK/blob/master/fetchDependencies?utm_source=chatgpt.com)
        with:
          submodules: recursive

      - name: Install Dependencies
        run: |
          brew install cmake ninja  # cmake & ninja for XCFramework creation  [oai_citation_attribution:3‡vulkan.lunarg.com](https://vulkan.lunarg.com/doc/view/1.3.275.0/mac/getting_started.html?utm_source=chatgpt.com)

      - name: Clone & Build MoltenVK
        run: |
          git clone https://github.com/KhronosGroup/MoltenVK.git deps/MoltenVK
          cd deps/MoltenVK
          ./fetchDependencies --ios      # produces MoltenVK.xcframework under Package  [oai_citation_attribution:4‡github.com](https://github.com/KhronosGroup/MoltenVK?utm_source=chatgpt.com)
          cd ../..

      - name: Add MoltenVK XCFramework
        run: |
          mkdir -p ppsspp/ios/MoltenVK
          cp -R deps/MoltenVK/Package/Release/MoltenVK/MoltenVK.xcframework \
              ppsspp/ios/MoltenVK/      # copy XCFramework into project  [oai_citation_attribution:5‡p-horlix.net](https://p-horlix.net/umamusume-phazor/?p=928&utm_source=chatgpt.com)

      - name: Generate Xcode project via CMake
        run: |
          mkdir -p $BUILD_DIR
          cd $BUILD_DIR
          cmake ../.. \
            -DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchains/ios.cmake \
            -DIOS_PLATFORM=OS \
            -GXcode \
            -DCMAKE_XCODE_ATTRIBUTE_IPHONEOS_DEPLOYMENT_TARGET=$IPHONEOS_DEPLOYMENT_TARGET

      - name: Configure Xcode to Embed MoltenVK
        run: |
          # Use PlistBuddy to inject Embed & Sign for MoltenVK.xcframework
          xcodebuild -project PPSSPP.xcodeproj \
            -target PPSSPP \
            -configuration Release \
            -showBuildSettings | grep FRAMEWORK_SEARCH_PATHS
          # In Xcode UI this maps to "Frameworks, Libraries, and Embedded Content" → Embed & Sign  [oai_citation_attribution:6‡vulkan.lunarg.com](https://vulkan.lunarg.com/doc/view/1.3.275.0/mac/getting_started.html?utm_source=chatgpt.com)

      - name: Setup Signing Keychain
        run: |
          CERT_P12="certs/signing.p12"
          PROV_PROFILE="certs/ppsspp.mobileprovision"
          security create-keychain -p "$P12_PASSWORD" build.keychain
          security import "$CERT_P12" -k build.keychain -P "$P12_PASSWORD" -T /usr/bin/codesign
          security list-keychains -s build.keychain
          security unlock-keychain -p "$P12_PASSWORD" build.keychain
          security set-keychain-settings -lut 21600 build.keychain
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp "$PROV_PROFILE" ~/Library/MobileDevice/Provisioning\ Profiles/

      - name: Build & Sign PPSSPP
        run: |
          cd $BUILD_DIR
          xcodebuild \
            -scheme PPSSPP \
            -configuration Release \
            -destination generic/platform=iOS \
            CODE_SIGN_STYLE=Manual \
            CODE_SIGN_IDENTITY="iPhone Developer" \
            PROVISIONING_PROFILE_SPECIFIER="PPSSPP Profile" \
            IPHONEOS_DEPLOYMENT_TARGET=$IPHONEOS_DEPLOYMENT_TARGET \
            clean build           # builds and signs app + embedded frameworks  [oai_citation_attribution:7‡khronos.org](https://www.khronos.org/blog/developing-with-vulkan-on-apple-ios?utm_source=chatgpt.com)

      - name: Package IPA
        run: |
          cd $BUILD_DIR
          mkdir -p Payload
          cp -R Release-iphoneos/PPSSPP.app Payload/
          zip -qry PPSSPP-iOS.ipa Payload   # final IPA with embedded MoltenVK  [oai_citation_attribution:8‡vulkan.lunarg.com](https://vulkan.lunarg.com/doc/view/1.3.275.0/mac/getting_started.html?utm_source=chatgpt.com)

      - name: Upload IPA
        uses: actions/upload-artifact@v4  # upload artifact for download  [oai_citation_attribution:9‡github.com](https://github.com/KhronosGroup/MoltenVK/blob/master/fetchDependencies?utm_source=chatgpt.com)
        with:
          name: PPSSPP-iOS
          path: $BUILD_DIR/PPSSPP-iOS.ipa
