name: Build and Sign PPSSPP for iOS

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  BUILD_DIR: ${{ github.workspace }}/ppsspp-builder/ppsspp/build-ios
  CERTIFICATE_PASSWORD: password

jobs:
  build-ppsspp-ios:
    runs-on: macos-14

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Dependencies
        run: |
          brew install ldid gnu-sed make cmake

      - name: Configure iOS Build
        run: |
          mkdir -p $BUILD_DIR
          cd $BUILD_DIR
          cmake .. -DCMAKE_TOOLCHAIN_FILE=../../cmake/Toolchains/ios.cmake -G Xcode

      - name: Build Project
        run: |
          cd $BUILD_DIR
          cmake --build . --config Release

      - name: Sign App with ldid
        run: |
          cd $BUILD_DIR
          export LDID_PASSWORD="$CERTIFICATE_PASSWORD"

          if [ -f "../../certificate.p12" ] && [ -f "../../ent.xml" ]; then
            echo "Signing MoltenVK if it exists..."
            if [ -f "PPSSPP.app/Frameworks/libMoltenVK.dylib" ]; then
              ldid -S ../../ent.xml -K ../../certificate.p12 -P "$LDID_PASSWORD" PPSSPP.app/Frameworks/libMoltenVK.dylib
            fi

            echo "Signing PPSSPP.app..."
            ldid -S ../../ent.xml -K ../../certificate.p12 -P "$LDID_PASSWORD" PPSSPP.app
          else
            echo "⚠️ certificate.p12 or ent.xml not found. Skipping code signing."
          fi

      - name: Package IPA
        run: |
          cd $BUILD_DIR
          mkdir -p Payload
          cp -r PPSSPP.app Payload/
          zip -qry PPSSPP-iOS.ipa Payload
          echo "✅ IPA created at $BUILD_DIR/PPSSPP-iOS.ipa"

      - name: Upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: PPSSPP-iOS
          path: ${{ env.BUILD_DIR }}/PPSSPP-iOS.ipa
