name: Build and Sign PPSSPP for iOS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  BUILD_DIR: ${{ github.workspace }}/ppsspp/build-ios
  CERTIFICATE_PASSWORD: password

jobs:
  build:
    runs-on: macos-14

    steps:
      - name: Checkout ppsspp-builder Repo
        uses: actions/checkout@v4

      - name: Clone PPSSPP Source
        run: |
          git clone --recursive https://github.com/hrydgard/ppsspp.git ppsspp

      - name: Install Dependencies
        run: |
          brew install ldid gnu-sed make cmake

      - name: Configure CMake for iOS
        run: |
          mkdir -p $BUILD_DIR
          cd $BUILD_DIR
          cmake .. -DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchains/ios.cmake -G Xcode

      - name: Build Project
        run: |
          cd $BUILD_DIR
          cmake --build . --config Release

      - name: Sign with ldid
        run: |
          cd $BUILD_DIR
          export LDID_PASSWORD="${CERTIFICATE_PASSWORD}"

          if [ -f "../../certificate.p12" ] && [ -f "../../ent.xml" ]; then
            echo "Signing frameworks..."
            if [ -f "PPSSPP.app/Frameworks/libMoltenVK.dylib" ]; then
              ldid -S ../../ent.xml -K ../../certificate.p12 -P "$LDID_PASSWORD" PPSSPP.app/Frameworks/libMoltenVK.dylib
            fi

            echo "Signing app..."
            ldid -S ../../ent.xml -K ../../certificate.p12 -P "$LDID_PASSWORD" PPSSPP.app
          else
            echo "Skipping signing: certificate or entitlements not found"
          fi

      - name: Package IPA
        run: |
          cd $BUILD_DIR
          mkdir -p Payload
          cp -r PPSSPP.app Payload/
          zip -qry PPSSPP-iOS.ipa Payload

      - name: Upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: PPSSPP-iOS
          path: ${{ env.BUILD_DIR }}/PPSSPP-iOS.ipa
